
@{
    ViewBag.Title = "UploadAlbum";
    Layout = null;
}
<style>
    .upImg {
        height: 60px;
    }
    .layui-table{
        text-align:center;
    }
</style>

<script src="~/Content/jquery-1.10.2.js"></script>
<script src="~/Content/cos-js-sdk-v4-master/cos-js-sdk-v4.js"></script>
<script src="~/Content/cos-js-sdk-v4-master/crypto.js"></script>
<link href="~/Content/layui/css/layui.css" rel="stylesheet" />
<fieldset class="layui-elem-field layui-field-title" style="margin-top: 30px;">
    <legend>高级应用：制作一个多文件列表</legend>
</fieldset>

<div class="layui-upload">
    <input type="file" class="layui-btn layui-btn-normal" value="" id="fileList" multiple onchange="ShowUpList()" style="display:none">
    <input type="button" id="btn" onclick="document.getElementById('fileList').click();" value="上传"/>

    <div class="layui-upload-list" style="overflow-y:auto;max-height:75%">
        <table class="layui-table" lay-filter="parse-table-demo" style="min-width:860px;width:100%">
            <thead>
                <tr>
                    <th width="200px">略缩图</th>
                    <th width="80px">文件名</th>
                    <th width="80px">大小</th>
                    <th width="200px">校验进度</th>
                    <th width="200px">上传进度</th>
                    <th width="100px">操作</th>
                </tr>
            </thead>
        </table>
    </div>
    <button type="button" class="layui-btn" onclick="upimglist()">开始上传</button>
</div>
<script src="/Content/layui/layui.js"></script>
<script src="/Content/ImgContentShow/ImgContentShow.js"></script>
<script>
    var imgCount = 0;
    var myArray = new Array()
    var IdmyArray = new Array()
    function ShowUpList() {
        var strtdtr = "";
        var docObj = document.getElementById('fileList');
        var file = document.getElementById('fileList').files;
        var formData = new FormData();
        for (i = 0; i < file.length; i++) {
            //formData.append("file[" + i + "]", file[i]); //++++++++++    
            console.info(file[i].name + '/' + (file[i].size / 1014).toFixed(1))
            strtdtr = '<tbody><tr id= "tr' + imgCount + '" > '
            strtdtr += '<td><img src="" class="upImg" id="img' + imgCount + '" filename="' + file[i].name + '" onclick="showImg(this)"/></td>'
            strtdtr += '<td>' + file[i].name + '</td>'
            strtdtr += '<td>' + (file[i].size / 1014).toFixed(1) + 'kb</td>'
            strtdtr += '<td width="300"><div class="layui-progress layui-progress-big" lay-filter="progA' + imgCount + '"> <div class="layui-progress-bar layui-bg-orange"><span class="layui-progress-text" id="progressA' + imgCount + '">0%</span></div></div></td > '
            strtdtr += '<td width="300"><div class="layui-progress layui-progress-big" lay-filter="prog' + imgCount + '" > <div class="layui-progress-bar"><span class="layui-progress-text" id="progress' + imgCount + '">0%</span></div></div ></td > '
            strtdtr += '<td>'
            strtdtr += '<button class="layui-btn layui-btn-mini demo-reload layui-hide" onclick="UpFlie(' + imgCount + ')">重传</button>'
            strtdtr += '<button class="layui-btn layui-btn-mini layui-btn-danger demo-delete" onclick="deleteFlie(' + imgCount + ')">删除</button>'
            strtdtr += '</td>'
            strtdtr += '</tr></tbody>';

            var breakOuter = false;

            var imgobj = $(".upImg");
            if (imgobj != null) {
                for (var j = 0; j < imgobj.length; j++) {
                    if ($(imgobj[j]).attr("filename") == file[i].name) {
                        strtdtr = "";
                        breakOuter = true;
                        break;
                    }
                }
            }
            if (breakOuter)
                continue;

            $('.layui-table').append(strtdtr);
            strtdtr = "";

            var imgObjPreview = document.getElementById("img" + imgCount);
            if (docObj.files && docObj.files[i]) {
                //火狐下，直接设img属性
                //imgObjPreview.style.display = 'block';
                //imgObjPreview.style.width = '150px';
                //imgObjPreview.style.height = '180px';
                //imgObjPreview.src = docObj.files[0].getAsDataURL();
                //火狐7以上版本不能用上面的getAsDataURL()方式获取，需要一下方式
                imgObjPreview.src = window.URL.createObjectURL(docObj.files[i]);
            }
            else {
                //IE下，使用滤镜
                docObj.select();
                var imgSrc = document.selection.createRange().text;
                alert(imgSrc)
                var localImagId = document.getElementById("img" + imgCount);
                //必须设置初始大小
                //localImagId.style.width = "150px";
                //localImagId.style.height = "180px";
                //图片异常的捕捉，防止用户修改后缀来伪造图片
                try {
                    localImagId.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=scale)";
                    localImagId.filters.item("DXImageTransform.Microsoft.AlphaImageLoader").src = imgSrc;
                }
                catch (e) {

                    alert("您上传的图片格式不正确，请重新选择!");
                    return false;
                }
                imgObjPreview.style.display = 'none';
                document.selection.empty();
            }
            $("img" + imgCount).attr("src", window.URL.createObjectURL(file[i]));
            myArray[imgCount] = file[i];
            IdmyArray[imgCount] = imgCount;
            imgCount++;
        };
    }


    function deleteFlie(id)
    {
        $("#tr" + id).remove();
        IdmyArray.splice(id, 1);
    }

    function upimglist() {
        if (myArray == null)
            return false;
        for (var i = 0; i < IdmyArray.length; i++) {
                upfile(myArray[IdmyArray[i]], IdmyArray[i])
            }
    }


    function upfile(file,id)
    {
        layui.use('element', function () {
            var $ = layui.jquery
            , element = layui.element;
        //TODO 以下几个值请确保填上再调用示例里的sdk方法
        //具体可以到https://console.qcloud.com/cos 进行查看
        var bucket = 'myhome1314';
        var appid = '1253564673';
        var sid = 'AKID3vYw61S6IFwOccPW7UeYDdplRs53jFSQ';
        var skey = 'oMjsqZ4JK6dvzoOjohNozve7LJ2asvjH';
        var region = 'sh';
        //TODO 以上几个值请确保填上再调用示例里的sdk方法

        var myFolder = '/ceshi/';//需要操作的目录

        //初始化逻辑
        //特别注意: JS-SDK使用之前请先到console.qcloud.com/cos 对相应的Bucket进行跨域设置
        var cos = new CosCloud({
            appid: appid, // APPID 必填参数
            bucket: bucket, // bucketName 必填参数
            region: region, // 地域信息 必填参数 华南地区填gz 华东填sh 华北填tj
            getAppSign: function (callback) {//获取签名 必填参数

                // 方法一（推荐线上使用）：搭建鉴权服务器，构造请求参数获取签名，推荐实际线上业务使用，优点是安全性好，不会暴露自己的私钥
                // $.get('../server/auth.php', callback);

                // 方法二（前端调试使用）：直接在浏览器前端计算签名，需要获取自己的accessKey和secretKey, 一般在调试阶段使用
                var self = this;
                var random = parseInt(Math.random() * Math.pow(2, 32));
                var now = parseInt(Date.now() / 1000);
                var e = now + 600; //签名过期时间为当前+600s
                var path = ''; //多次签名这里填空
                var str = 'a=' + self.appid + '&k=' + sid + '&e=' + e + '&t=' + now + '&r=' + random + '&f=' + path + '&b=' + self.bucket;
                var sha1Res = CryptoJS.HmacSHA1(str, skey); // 这里使用CryptoJS计算sha1值，你也可以用其他开源库或自己实现
                var strWordArray = CryptoJS.enc.Utf8.parse(str);
                var resWordArray = sha1Res.concat(strWordArray);
                var res = resWordArray.toString(CryptoJS.enc.Base64);

                callback(res);

            },
            getAppSignOnce: function (callback) {//单次签名，参考上面的注释即可

                // 方法一（推荐线上使用）：搭建鉴权服务器，构造请求参数获取签名，推荐实际线上业务使用，优点是安全性好，不会暴露自己的私钥
                // $.get('../server/auth.php', {path: self.path}, callback);

                // 方法二（前端调试使用）：直接在浏览器前端计算签名，需要获取自己的accessKey和secretKey, 一般在调试阶段使用
                var self = this;
                var random = parseInt(Math.random() * Math.pow(2, 32));
                var now = parseInt(Date.now() / 1000);
                var e = 0; // 单次签名 expire==0
                var path = self.path;
                var str = 'a=' + self.appid + '&k=' + sid + '&e=' + e + '&t=' + now + '&r=' + random + '&f=' + path + '&b=' + self.bucket;
                var sha1Res = CryptoJS.HmacSHA1(str, skey); // 这里使用CryptoJS计算sha1值，你也可以用其他开源库或自己实现
                var strWordArray = CryptoJS.enc.Utf8.parse(str);
                var resWordArray = sha1Res.concat(strWordArray);
                var res = resWordArray.toString(CryptoJS.enc.Base64);

                callback(res);

            }
        });

        var successCallBack = function (result) {
            console.log('request success.');
            //$("#result").val(JSON.stringify(result));
        };

        var errorCallBack = function (result) {
            result = result || {};
            console.log('request error:', result && result.message);
            //$("#result").val(result.responseText || 'error');
        };

        var progressCallBack = function (curr, sha1) {
            var sha1CheckProgress = ((sha1 * 100).toFixed(2) || 100) + '%';
            var uploadProgress = ((curr || 0) * 100).toFixed(2) + '%';
            var msg = 'upload progress:' + uploadProgress + '; sha1 check:' + sha1CheckProgress + '.';

            if (uploadProgress != "0.00%") {
                element.progress('prog' + id, uploadProgress)//S
                $("#progress" + id).text(uploadProgress);

                element.progress('progA' + id, "100%")//S
                $("#progressA" + id).text("100.00%");
            } else {
                element.progress('progA' + id, sha1CheckProgress)
                $("#progressA" + id).text(sha1CheckProgress);
            }

            
        };

        var lastTaskId;
        var taskReady = function (taskId) {
            lastTaskId = taskId;
        };

        //上传文件,适合小于20M的文件上传
        //$('#uploadFile').on('click', function () {
        //    $('#js-file').off('change').on('change', function (e) {
        //        var file = e.target.files[0];
        //        // 分片上传过程可能会有 op=upload_slice_list 的 POST 请求返回 404，不会影响上传：https://github.com/tencentyun/cos-js-sdk-v4/issues/16
        //        cos.uploadFile(successCallBack, errorCallBack, progressCallBack, bucket, myFolder + file.name, file, 0, taskReady);//insertOnly==0 表示允许覆盖文件 1表示不允许
        //        $('#form')[0].reset();
        //        return false;
        //    });

        //    setTimeout(function () {
        //        $('#js-file').click();
        //    }, 0);

        //    return false;
        //});
        //分片上传文件,当选择大于20M大小的文件的时候用分片上传
        var taskId = 0;
        // 分片上传直接调用uploadFile方法，内部会判断是否需要分片
        // 分片上传过程可能会有 op=upload_slice_list 的 POST 请求返回 404，不会影响上传：https://github.com/tencentyun/cos-js-sdk-v4/issues/16
        taskId = cos.uploadFile(successCallBack, errorCallBack, progressCallBack, bucket, myFolder + file.name, file, 0, taskReady);//insertOnly==0 表示允许覆盖文件 1表示不允许

        //分片上传也可以直接调用sliceUploadFile方法，分片大小设置暂定不超过1M
        //cos.sliceUploadFile(successCallBack, errorCallBack, progressCallBack, bucket, myFolder + file.name, file, 0, 1024*1024);

        //$('#form')[0].reset();
        return false;

        setTimeout(function () {
            $('#js-file').click();
        }, 0);

          return false;
        })
    }
</script>
